/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package universityadmissionsystem;

import connectivity.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

public class Couses extends javax.swing.JFrame {

    /**
     * Creates new form Couses
     */
    public Couses() {
        initComponents();
        setBounds(10, 150, 900, 600);
        updateCourses();
    }
    
    void updateCourses() {
        MyTableModel.queryTable("select courseId as 'Course Number',course as 'Course' , charges as 'Charges' ,noOfSeats as 'No Of Seats' from courses  ", coursesTable);
    }
    
    void clear() {
        course.setText("");
        charges.setText("");
        noOfSeats.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        course = new javax.swing.JTextField();
        charges = new javax.swing.JTextField();
        noOfSeats = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        coursesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        courseChk = new javax.swing.JCheckBox();
        chargeChk = new javax.swing.JCheckBox();
        seatChk = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Couse");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Charges");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("No Of Seats");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(153, 0, 0));
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(153, 0, 0));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(153, 0, 0));
        jButton3.setText("Clear Field");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        coursesTable.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(153, 0, 0)));
        coursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{
                {null},
                {null},
                {null},
                {null}
            },
            new String[]{""}) {
            Class[] types = new Class[]{java.lang.Object.class};
            boolean[] canEdit = new boolean[]{false};

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        coursesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coursesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(coursesTable);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Search Criteria:");

        courseChk.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        courseChk.setForeground(new java.awt.Color(153, 0, 0));
        courseChk.setText("By Couse");
        courseChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseChkActionPerformed(evt);
            }
        });

        chargeChk.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chargeChk.setForeground(new java.awt.Color(153, 0, 0));
        chargeChk.setText("Charges");

        seatChk.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        seatChk.setForeground(new java.awt.Color(153, 0, 0));
        seatChk.setText("No. Of Seats");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(153, 0, 0));
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(153, 0, 0));
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/th.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("COURSE DETAILS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2))
                                                .addGap(51, 51, 51)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(noOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(charges, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel1))
                                        .addGap(51, 51, 51)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton3)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(38, 38, 38)
                                                .addComponent(courseChk)
                                                .addGap(18, 18, 18)
                                                .addComponent(chargeChk)
                                                .addGap(18, 18, 18)
                                                .addComponent(seatChk))
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 38, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(course, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addGap(10, 10, 10)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(charges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(26, 26, 26)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(noOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(jButton3)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(courseChk)
                    .addComponent(chargeChk)
                    .addComponent(seatChk)
                    .addComponent(jButton4))
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String course1 = course.getText().trim();
        String charges1 = charges.getText().trim();
        String noOfSeats1 = noOfSeats.getText().trim();
        if (course1.equals("") || charges1.equals("") || noOfSeats1.equals("")) {
            JOptionPane.showMessageDialog(getRootPane(), "All fields are required");
        } else {
            try {
                int x = Integer.parseInt(charges1);
                int n = Integer.parseInt(noOfSeats1);
                Connection conn = DBConnect.getConnection();
                String query = "select * from courses where course=?";
                try {
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, course1);
                    
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(getRootPane(), "Course already exists");
                        
                    } else {
                        
                        String query1 = "insert into courses (course,charges,noOfSeats) values(?,?,?)";
                        PreparedStatement ps1 = conn.prepareStatement(query1);
                        ps1.setString(1, course1);
                        ps1.setInt(2, x);
                        ps1.setInt(3, n);
                        int rowsAff = ps1.executeUpdate();
                        if (rowsAff > 0) {
                            
                            JOptionPane.showMessageDialog(getRootPane(), "Record inserted");
                            updateCourses();
                            clear();
                        } else {
                            JOptionPane.showMessageDialog(getRootPane(), "Record not inserted");
                            
                        }
                        
                    }
                } catch (Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(getRootPane(), "Error");
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(getRootPane(), "Enter numeric values in charges & num of seats");
                
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void coursesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coursesTableMouseClicked
        // TODO add your handling code here:
        int rows = coursesTable.getSelectedRow();
        if (rows > -1) {
            String course1 = coursesTable.getValueAt(coursesTable.getSelectedRow(), 1).toString();
            String charges1 = coursesTable.getValueAt(coursesTable.getSelectedRow(), 2).toString();
            String noOfSeats1 = coursesTable.getValueAt(coursesTable.getSelectedRow(), 3).toString();
            course.setText(course1);
            charges.setText(charges1);
            noOfSeats.setText(noOfSeats1);
            
        }
        else{
            clear();
        }
    }//GEN-LAST:event_coursesTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String course1 = course.getText().trim();
        String charges1 = charges.getText().trim();
        String noOfSeats1 = noOfSeats.getText().trim();
        if (course1.equals("") || charges1.equals("") || noOfSeats1.equals("")) {
            JOptionPane.showMessageDialog(getRootPane(), "All fields are required");
        } else {
            try {
                int x = Integer.parseInt(charges1);
                int n = Integer.parseInt(noOfSeats1);
                Connection conn = DBConnect.getConnection();
                String query = "select * from courses where course=?";
                try {
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, course1);
                    
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        String query1 = "update courses set charges=? ,noOfSeats=? where course=?";
                        PreparedStatement ps1 = conn.prepareStatement(query1);
                       
                        ps1.setInt(1, x);
                        ps1.setInt(2, n);
                        ps1.setString(3, course1);
                        int rowsAff = ps1.executeUpdate();
                        if (rowsAff > 0) {
                            
                            JOptionPane.showMessageDialog(getRootPane(), "Record updated");
                            updateCourses();
                        
                        } else {
                            JOptionPane.showMessageDialog(getRootPane(), "Record not updated");
                            
                        }
                        
         
                        
                    } else {
                        JOptionPane.showMessageDialog(getRootPane(), "Course does not exists");
                        
                    }
                } catch (Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(getRootPane(), "Error");
                    
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(getRootPane(), "Enter numeric values in charges & num of seats");
                
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String course1 = course.getText().trim();
        String charges1 = charges.getText().trim();
        String noOfSeats1 = noOfSeats.getText().trim();
        
        String query="select courseId as 'Course Number',course as 'Course' , charges as 'Charges' ,noOfSeats as 'No Of Seats' from courses  where courseId>0 ";
        if(chargeChk.isSelected()){
            query+=" and charges like '"+ charges1 +"%' ";
        }
        if(courseChk.isSelected()){
            query+=" and course like '"+ course1 +"%' ";
        }
        
        if(seatChk.isSelected()){
            query+=" and noOfSeats like '"+ noOfSeats1 +"%' ";
        }
        MyTableModel.queryTable(query, coursesTable);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void courseChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseChkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseChkActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

         String course1 = course.getText().trim();
        String charges1 = charges.getText().trim();
        String noOfSeats1 = noOfSeats.getText().trim();
        if (course1.equals("") || charges1.equals("") || noOfSeats1.equals("")) {
            JOptionPane.showMessageDialog(getRootPane(), "All fields are required");
        } else {
            try {
                Connection conn = DBConnect.getConnection();
                String query1 = "DELETE from  `courses` where  course=?";
                PreparedStatement ps1 = conn.prepareStatement(query1);
                 ps1.setString(1, course1);
             //     ps1.setString(2, charges1);
              //    ps1.setString(3, noOfSeats1);
              //  ps1.setString(1, course1);
               // ps1.setString(5, charges);
              //  ps1.setString(6, from);
              //  ps1.setString(7, to);
                int rowsAff = ps1.executeUpdate();
                if (rowsAff > 0) {

                    JOptionPane.showMessageDialog(getRootPane(), "Record deleted");
                    updateCourses();
                    clear();
                } else {
                    JOptionPane.showMessageDialog(getRootPane(), "Record not deleted");

                }


            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(getRootPane(), "Error");

            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Couses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Couses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Couses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Couses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Couses().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chargeChk;
    private javax.swing.JTextField charges;
    private javax.swing.JTextField course;
    private javax.swing.JCheckBox courseChk;
    private javax.swing.JTable coursesTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField noOfSeats;
    private javax.swing.JCheckBox seatChk;
    // End of variables declaration//GEN-END:variables
}
